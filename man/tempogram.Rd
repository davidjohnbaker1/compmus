% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tempo.R
\name{tempogram}
\alias{tempogram}
\title{Compute a tempogram from Spotify segment onsets}
\usage{
tempogram(
  track_analysis,
  window_size = 8,
  hop_size = 1,
  cyclic = FALSE,
  bpms = if (cyclic) 80:160 else 30:600,
  window_function = signal::hamming
)
}
\arguments{
\item{track_analysis}{Spotify audio analysis as returned by
\code{\link{get_tidy_audio_analysis}}.}

\item{window_size}{Window size in seconds (default 8).}

\item{hop_size}{Hop size in seconds (default 1).}

\item{cyclic}{Boolean stating whether the tempogram should be cyclic (default
not).}

\item{bpms}{Vector of tempi in beats per minute to include in the tempogram
(default 30--200 for non-cyclic and 80--160 for cyclic, inclusive of all
integer tempi).}

\item{window_function}{Window function for the Fourier analysis (default
Hamming).}
}
\description{
Computes a Fourier-based tempogram based on onsets of Spotify segments.
Returns a tibble with \code{time}, \code{bpm}, and \code{power} columns.
Power is normalised to a max of 1 (Chebyshev norm) within each time point.
}
\examples{
library(tidyverse)
get_tidy_audio_analysis('6PJasPKAzNLSOzxeAH33j2') \%>\%
    tempogram(window_size = 4, hop_size = 2)
}
